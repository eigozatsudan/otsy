services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"  # User web
      - "3001:3001"  # Shopper web
      - "3002:3002"  # Admin web
      - "4000:4000"  # API
    volumes:
      - .:/app
      - /app/node_modules
      - yarn_cache:/app/.yarn/cache
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=4000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/otsukai
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    stdin_open: true
    tty: true

  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: otsukai
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  db_data:
  minio_data:
  node_modules:
  yarn_cache: