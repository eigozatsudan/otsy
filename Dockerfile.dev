FROM node:24-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache python3 make g++ postgresql-client openssl libssl3 libcrypto3 bash 

# Ensure Prisma downloads correct engine for Alpine (musl, OpenSSL 3)
ENV PRISMA_CLI_BINARY_TARGETS=linux-musl-openssl-3.0.x,linux-musl-arm64-openssl-3.0.x

# Enable corepack and prepare yarn
RUN corepack enable && corepack prepare yarn@4.10.3 --activate

# Copy package files first for better caching
COPY package.json yarn.lock .yarnrc.yml turbo.json ./

# Create workspace directories
RUN mkdir -p apps/web services/api packages/ui packages/types

# Copy package.json files for all workspaces
COPY apps/web/package.json ./apps/web/
COPY services/api/package.json ./services/api/
COPY packages/ui/package.json ./packages/ui/
COPY packages/types/package.json ./packages/types/

# Install dependencies
# RUN yarn cache clean --all && yarn install --immutable

# Copy the rest of the application
COPY . .

# Generate Prisma client with proper binary targets
# RUN cd services/api && npx prisma generate || true

# Expose ports
EXPOSE 3000 3001 3002 4000

# Default command for development
CMD ["sh", "-c", "yarn cache clean --all && yarn install --immutable && yarn turbo run dev --parallel --continue"]